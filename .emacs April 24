
;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(custom-enabled-themes (quote (tango-dark)))
 '(package-selected-packages (quote (auctex))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Inconsolata" :foundry "outline" :slant normal :weight normal :height 113 :width normal)))))

;; =========================== My Costomization =============================================

(autoload 'flyspell-mode "flyspell" "On-the-fly spelling checker." t)
(autoload 'flyspell-delay-command "flyspell" "Delay on command." t)
(autoload 'tex-mode-flyspell-verify "flyspell" "" t)
(add-to-list 'exec-path "C:/Program Files (x86)/Aspell/bin/")
(setq ispell-program-name "aspell")
(setq ispell-personal-dictionary "C:/Users/sheny/AppData/Roaming/.aspell.en.pws")
(require 'ispell)
; (setq ispell-personal-dictionary "C:/Program Files/Emacs/share/emacs/25.1/lisp/textmodes/ispell_en/")
;; Empty personal dictionary
;; Aspell and Flyspell setup

;;;------------------------------------------------------------------------------------------

(add-hook 'LaTeX-mode-hook 'LaTeX-math-mode) ;; Enable LaTeX Math mode by default
(add-hook 'LaTeX-mode-hook 'turn-on-reftex) ;; Enable RefTeX by default
(add-hook 'text-mode-hook 'turn-on-auto-fill) ;; Turn on auto-fill-mode
(add-hook 'LaTeX-mode-hook
	  (lambda () (set (make-variable-buffer-local 'TeX-electric-math)
			  (cons "$" "$")))) ;; Automatically complete a pair of dollar signs
(add-hook 'LaTeX-mode-hook 'flyspell-mode) ;; Enable Flyspell by default
;(add-hook 'LaTeX-mode-hook #'outline-minor-mode) ;; Code folding minor mode
;(add-hook 'LaTeX-mode-hook (lambda ()
;			     (TeX-fold-mode 1))) ; Automatic code folding
(require 'reftex)

;;;------------------------------------------------------------------------------------------

(setq LaTeX-electric-left-right-brace 1) ;; Automatically complete a pair of braces
(setq TeX-electric-sub-and-superscript 1) ;; Automatically insert a pair of braces after superscripts and subscripts
(setq TeX-parse-self t) ;; Enable parse on load.
(setq TeX-auto-save t) ;; Enable parse on save.
(setq-default TeX-master nil) ;; Query for master file.
(setq reftex-plug-into-AUCTeX t) ;; Enable AUCTeX-RefTeX Interface
(setq inhibit-startup-screen t) ;; Disable startup message
;(setq TeX-PDF-mode t) ;; Compile to PDFLaTeX
;(setq default-directory "C:\\Plumage\\")

;;;-------------------------------------------------------------------
(defun find-user-init-file ()
  "Edit the `user-init-file', in another window."
  (interactive)
  (find-file-other-window user-init-file))
(global-set-key (kbd "C-c I") 'find-user-init-file)
;;;-------------------------------------------------------------------
(defun insert-frac ()
  "Insert  \\frac{}{} and position point before the first right brace."
  (interactive)
  (progn
    (insert "\\frac{}{}")
    (backward-char)
    (backward-char)
    (backward-char)))
(global-set-key "\C-cf"   'insert-frac)
;;;-------------------------------------------------------------------
(defun insert-sqrt ()
  "Insert  \\sqrt{} and position point before the right brace."
  (interactive)
  (progn
    (insert "\\sqrt{}")
    (backward-char)))
(global-set-key "\C-cs"   'insert-sqrt)
;;;-------------------------------------------------------------------
(defun insert-enum ()
  "Insert an enumerate environment."
  (interactive)
  (progn
    (insert "\\begin{enumerate}
\\item
")
    (save-excursion (insert "
\\end{enumerate}"))))
(global-set-key "\ee"     'insert-enum)
;;;-------------------------------------------------------------------
(defun insert-proof ()
  "Insert a proof environment."
  (interactive)
  (progn
    (insert "\\begin{proof}
")
    (save-excursion (insert "
\\end{proof}"))))
(global-set-key "\ep"     'insert-proof)
;;;-------------------------------------------------------------------
(defun insert-align-wo-number ()
  "Insert an align environment without number."
  (interactive)
  (progn
    (insert "\\begin{align*}
")
    (save-excursion (insert "
\\end{align*}"))))
(global-set-key "\ea"     'insert-align-wo-number)
;;;-------------------------------------------------------------------
(defun insert-equation-wo-number ()
  "Insert an equation* environment."
  (interactive)
  (progn
    (insert "\\begin{equation*}
")
    (save-excursion (insert "
\\end{equation*}"))))
(global-set-key "\eq"     'insert-equation-wo-number)
;;;-------------------------------------------------------------------
(defun insert-eq-split ()
  "Insert an equation* and split environment."
  (interactive)
  (progn
    (insert "\\begin{equation*}
\\begin{split}
")
    (save-excursion (insert "
\\end{split}
\\end{equation*}"))))
(global-set-key "\es"     'insert-eq-split)
;;;-------------------------------------------------------------------
(add-hook 'LaTeX-mode-hook 'add-my-latex-environments)
(defun add-my-latex-environments ()
  (LaTeX-add-environments
   '("thm" LaTeX-env-label)
   '("prop" LaTeX-env-label)
   '("lem" LaTeX-env-label)
   '("cor" LaTeX-env-label)
   '("def" LaTeX-env-label)
   '("ex" LaTeX-env-label)
   '("equation*" LaTeX-env-label)))

;;;============================= End of Costomization ======================================
